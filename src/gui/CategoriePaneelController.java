package gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.Button;
import javafx.scene.control.Label;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import domein.Categorie;
import domein.CategorieController;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.ListView;
import javafx.scene.layout.AnchorPane;

public class CategoriePaneelController extends AnchorPane{
	@FXML
	private Button createCategorie_btn;
	@FXML
	private ListView<String> categorie_List;
	@FXML
	private Button viewCategorie_btn;
	@FXML
	private Button editCategorie_btn;
	@FXML
	private Button deleteCategorie_btn;
	@FXML
	private Label catSelecteren_lbl;	
	
	private CategorieController catController;
	private ObservableList<Categorie> catItemList;
	private boolean rechterSchermAanwezig = false;
	
	public CategoriePaneelController() {
		this.catController = new CategorieController();
		buildGui();
		setCategorieList();
		initialize();
	}
	
	private void initialize() {
		catItemList.forEach(c -> categorie_List.getItems().add(c.getName()));
	}

	private void buildGui() {
		
		try {
			
			categorie_List = new ListView<>();
			
			catItemList = FXCollections.observableArrayList(new ArrayList<>());
			
		FXMLLoader loader = new FXMLLoader(getClass().getResource("CategoriePaneel.fxml"));
		loader.setController(this);
		loader.setRoot(this);
		loader.load();
		} 
		catch(IOException ex)
		{
		throw new RuntimeException(ex);
		}
		
	}
	
	private void setCategorieList() {
		List<Categorie> cats = catController.geefCategorien();
		for (Categorie c : cats) {
			this.catItemList.add(c);
		}
	}
	

	// Event Listener on Button[#createCategorie_btn].onAction
	@FXML
	public void createCategorie_OnAction(ActionEvent event) {
		catSelecteren_lbl.setText("");
		if (rechterSchermAanwezig) {
			verwijderRechterScherm();			
		}
		CategorieAanmakenPaneelController catAanmakenPaneel = new CategorieAanmakenPaneelController();
		AnchorPane.setRightAnchor(catAanmakenPaneel, 25.0);
		this.getChildren().add(catAanmakenPaneel);
		rechterSchermAanwezig = true;
	}

	// Event Listener on Button[#raadpleegCategorie_btn].onAction
	@FXML
	public void raadplegenCategorie_OnAction(ActionEvent event) {
		catSelecteren_lbl.setText("");
		if (rechterSchermAanwezig) {
			verwijderRechterScherm();			
		}
		String naam = categorie_List.getSelectionModel().getSelectedItem();
		Categorie c = catItemList.stream().filter(cat -> cat.getName().equals(naam)).findAny().orElse(null);
		if (c != null) {
			CategorieRaadpleegPaneelController root = new CategorieRaadpleegPaneelController(c, catController);
			AnchorPane.setRightAnchor(root, 25.0);
			this.getChildren().add(root);
			rechterSchermAanwezig = true;			
		}else {
			catSelecteren_lbl.setText("Gelieve eerst een categorie te selecteren!");
		}
	}
	
	// Event Listener on Button[#editCategorie_btn].onAction
	@FXML
	public void editCategorie_OnAction(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#deleteCategorie_btn].onAction
	@FXML
	public void deleteCategorie_OnAction(ActionEvent event) {
		// TODO Autogenerated
	}
	
	private void verwijderRechterScherm() {
		this.getChildren().remove(this.getChildren().size()-1);
		rechterSchermAanwezig = false;
	}
}